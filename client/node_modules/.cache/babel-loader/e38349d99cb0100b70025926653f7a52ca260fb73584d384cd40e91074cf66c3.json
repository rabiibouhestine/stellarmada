{"ast":null,"code":"import * as PIXI from \"pixi.js\";\nimport { Card } from \"./Card\";\nexport class Hand {\n  constructor(cardsContainer, sheet, position, hand) {\n    this.cardsContainer = cardsContainer;\n    this.sheet = sheet;\n    this.position = position;\n    this.cards = [];\n    if (typeof hand == \"object\") {\n      for (const index in hand) {\n        const card = new Card(cardsContainer, sheet, hand[index], this.position);\n        this.cards.push(card);\n      }\n    }\n    if (typeof hand == \"number\") {\n      for (let step = 0; step < hand; step++) {\n        const card = new Card(cardsContainer, sheet, \"tile028.jpg\", this.position);\n        this.cards.push(card);\n      }\n    }\n    this.clean();\n  }\n  clean() {\n    for (const index in this.cards) {\n      const position = {\n        x: this.position.x + index * 100,\n        y: this.position.y\n      };\n      this.cards[index].sprite.zIndex = index;\n      this.cards[index].moveTo(position, true);\n    }\n  }\n  add(units, position) {\n    if (typeof units == \"object\") {\n      for (const index in units) {\n        const card = new Card(this.cardsContainer, this.sheet, units[index], position);\n        this.cards.push(card);\n      }\n    }\n    if (typeof units == \"number\") {\n      for (let step = 0; step < units; step++) {\n        const card = new Card(this.cardsContainer, this.sheet, \"tile028.jpg\", position);\n        this.cards.push(card);\n      }\n    }\n  }\n}","map":{"version":3,"names":["PIXI","Card","Hand","constructor","cardsContainer","sheet","position","hand","cards","index","card","push","step","clean","x","y","sprite","zIndex","moveTo","add","units"],"sources":["/Users/rabiibouhestine/mystuff/BrowserApps/Duels/client/src/game/components/Hand.js"],"sourcesContent":["import * as PIXI from \"pixi.js\";\nimport { Card } from \"./Card\";\n\nexport class Hand {\n    constructor(cardsContainer, sheet, position, hand) {\n        this.cardsContainer = cardsContainer;\n        this.sheet = sheet;\n        this.position = position;\n\n        this.cards = [];\n        if (typeof hand == \"object\") {\n            for (const index in hand) {\n                const card = new Card(cardsContainer, sheet, hand[index], this.position);\n                this.cards.push(card);\n            }\n        }\n        if (typeof hand == \"number\") {\n            for (let step = 0; step < hand; step++) {\n                const card = new Card(cardsContainer, sheet, \"tile028.jpg\", this.position);\n                this.cards.push(card);\n            }\n        }\n        this.clean();\n    }\n\n    clean() {\n        for (const index in this.cards) {\n            const position = {\n                x: this.position.x + (index * 100),\n                y: this.position.y\n            };\n            this.cards[index].sprite.zIndex = index;\n            this.cards[index].moveTo(position, true);\n        }\n    }\n\n    add(units, position) {\n        if (typeof units == \"object\") {\n            for (const index in units) {\n                const card = new Card(this.cardsContainer, this.sheet, units[index], position);\n                this.cards.push(card);\n            }\n        }\n        if (typeof units == \"number\") {\n            for (let step = 0; step < units; step++) {\n                const card = new Card(this.cardsContainer, this.sheet, \"tile028.jpg\", position);\n                this.cards.push(card);\n            }\n        }\n    }\n}\n"],"mappings":"AAAA,OAAO,KAAKA,IAAI,MAAM,SAAS;AAC/B,SAASC,IAAI,QAAQ,QAAQ;AAE7B,OAAO,MAAMC,IAAI,CAAC;EACdC,WAAWA,CAACC,cAAc,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,EAAE;IAC/C,IAAI,CAACH,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IAExB,IAAI,CAACE,KAAK,GAAG,EAAE;IACf,IAAI,OAAOD,IAAI,IAAI,QAAQ,EAAE;MACzB,KAAK,MAAME,KAAK,IAAIF,IAAI,EAAE;QACtB,MAAMG,IAAI,GAAG,IAAIT,IAAI,CAACG,cAAc,EAAEC,KAAK,EAAEE,IAAI,CAACE,KAAK,CAAC,EAAE,IAAI,CAACH,QAAQ,CAAC;QACxE,IAAI,CAACE,KAAK,CAACG,IAAI,CAACD,IAAI,CAAC;MACzB;IACJ;IACA,IAAI,OAAOH,IAAI,IAAI,QAAQ,EAAE;MACzB,KAAK,IAAIK,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGL,IAAI,EAAEK,IAAI,EAAE,EAAE;QACpC,MAAMF,IAAI,GAAG,IAAIT,IAAI,CAACG,cAAc,EAAEC,KAAK,EAAE,aAAa,EAAE,IAAI,CAACC,QAAQ,CAAC;QAC1E,IAAI,CAACE,KAAK,CAACG,IAAI,CAACD,IAAI,CAAC;MACzB;IACJ;IACA,IAAI,CAACG,KAAK,CAAC,CAAC;EAChB;EAEAA,KAAKA,CAAA,EAAG;IACJ,KAAK,MAAMJ,KAAK,IAAI,IAAI,CAACD,KAAK,EAAE;MAC5B,MAAMF,QAAQ,GAAG;QACbQ,CAAC,EAAE,IAAI,CAACR,QAAQ,CAACQ,CAAC,GAAIL,KAAK,GAAG,GAAI;QAClCM,CAAC,EAAE,IAAI,CAACT,QAAQ,CAACS;MACrB,CAAC;MACD,IAAI,CAACP,KAAK,CAACC,KAAK,CAAC,CAACO,MAAM,CAACC,MAAM,GAAGR,KAAK;MACvC,IAAI,CAACD,KAAK,CAACC,KAAK,CAAC,CAACS,MAAM,CAACZ,QAAQ,EAAE,IAAI,CAAC;IAC5C;EACJ;EAEAa,GAAGA,CAACC,KAAK,EAAEd,QAAQ,EAAE;IACjB,IAAI,OAAOc,KAAK,IAAI,QAAQ,EAAE;MAC1B,KAAK,MAAMX,KAAK,IAAIW,KAAK,EAAE;QACvB,MAAMV,IAAI,GAAG,IAAIT,IAAI,CAAC,IAAI,CAACG,cAAc,EAAE,IAAI,CAACC,KAAK,EAAEe,KAAK,CAACX,KAAK,CAAC,EAAEH,QAAQ,CAAC;QAC9E,IAAI,CAACE,KAAK,CAACG,IAAI,CAACD,IAAI,CAAC;MACzB;IACJ;IACA,IAAI,OAAOU,KAAK,IAAI,QAAQ,EAAE;MAC1B,KAAK,IAAIR,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGQ,KAAK,EAAER,IAAI,EAAE,EAAE;QACrC,MAAMF,IAAI,GAAG,IAAIT,IAAI,CAAC,IAAI,CAACG,cAAc,EAAE,IAAI,CAACC,KAAK,EAAE,aAAa,EAAEC,QAAQ,CAAC;QAC/E,IAAI,CAACE,KAAK,CAACG,IAAI,CAACD,IAAI,CAAC;MACzB;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}