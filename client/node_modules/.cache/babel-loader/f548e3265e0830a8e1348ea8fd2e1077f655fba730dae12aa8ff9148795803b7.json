{"ast":null,"code":"import * as PIXI from \"pixi.js\";\nimport { Deck } from \"./Deck\";\nimport { Card } from \"./Card\";\nexport class NewPlayer {\n  constructor(app, sheet, state, isPlayer) {\n    this.app = app;\n    this.sheet = sheet;\n    this.state = state;\n    this.positions = {\n      hand: {\n        x: 240,\n        y: 635\n      },\n      field: {\n        x: 240,\n        y: 475\n      },\n      shield: {\n        x: 840,\n        y: 475\n      },\n      tavern: {\n        x: 90,\n        y: 635\n      },\n      grave: {\n        x: 90,\n        y: 475\n      },\n      castle: {\n        x: 1110,\n        y: 635\n      },\n      jester: {\n        x: 1110,\n        y: 475\n      }\n    };\n    this.cardsContainer = new PIXI.Container();\n    this.cardsContainer.sortableChildren = true;\n    this.app.stage.addChild(this.cardsContainer);\n    this.handCount = state.handCount;\n    this.tavern = new Deck(app, sheet, \"tile028.jpg\", this.positions.tavern, state.tavern);\n    this.grave = new Deck(app, sheet, \"tile028.jpg\", this.positions.grave, state.grave);\n    this.castle = new Deck(app, sheet, \"tile013.jpg\", this.positions.castle, state.castle);\n    this.jester = new Deck(app, sheet, \"tile014.jpg\", this.positions.jester, state.jester);\n    this.hand = this.createCards(state.hand, isPlayer, this.positions.hand);\n    this.field = this.createCards(state.field, true, this.positions.field);\n    this.shield = this.createCards(state.shield, true, this.positions.shield);\n  }\n  createCards(locationState, isPlayer, start) {\n    const cards = [];\n    for (let index = 0; index < (isPlayer ? locationState.length : this.state.handCount); index++) {\n      const cardName = isPlayer ? locationState[index] : \"tile028.jpg\";\n      const card = new Card(this.cardsContainer, this.sheet, cardName, start);\n      cards.push(card);\n    }\n    this.repositionCards(cards, start);\n    return cards;\n  }\n  repositionCards(array, start) {\n    for (let index = 0; index < array.length; index++) {\n      const newPosition = {\n        x: start.x + index * 100,\n        y: start.y\n      };\n      array[index].moveTo(newPosition, true);\n    }\n  }\n}","map":{"version":3,"names":["PIXI","Deck","Card","NewPlayer","constructor","app","sheet","state","isPlayer","positions","hand","x","y","field","shield","tavern","grave","castle","jester","cardsContainer","Container","sortableChildren","stage","addChild","handCount","createCards","locationState","start","cards","index","length","cardName","card","push","repositionCards","array","newPosition","moveTo"],"sources":["/Users/rabiibouhestine/mystuff/BrowserApps/Duels/client/src/game/components/NewPlayer.js"],"sourcesContent":["import * as PIXI from \"pixi.js\";\n\nimport { Deck } from \"./Deck\";\nimport { Card } from \"./Card\";\n\nexport class NewPlayer {\n    constructor(app, sheet, state, isPlayer) {\n        this.app = app;\n        this.sheet = sheet;\n        this.state = state;\n\n        this.positions = {\n            hand: {x: 240, y: 635},\n            field: {x: 240, y: 475},\n            shield: {x: 840, y: 475},\n            tavern: {x: 90, y: 635},\n            grave: {x: 90, y: 475},\n            castle: {x: 1110, y: 635},\n            jester: {x: 1110, y: 475}\n        };\n\n        this.cardsContainer = new PIXI.Container();\n        this.cardsContainer.sortableChildren = true;\n        this.app.stage.addChild(this.cardsContainer);\n\n        this.handCount = state.handCount;\n\n        this.tavern = new Deck(app, sheet, \"tile028.jpg\", this.positions.tavern, state.tavern);\n        this.grave = new Deck(app, sheet, \"tile028.jpg\", this.positions.grave, state.grave);\n        this.castle = new Deck(app, sheet, \"tile013.jpg\", this.positions.castle, state.castle);\n        this.jester = new Deck(app, sheet, \"tile014.jpg\", this.positions.jester, state.jester);\n\n        this.hand = this.createCards(state.hand, isPlayer, this.positions.hand);\n        this.field = this.createCards(state.field, true, this.positions.field);\n        this.shield = this.createCards(state.shield, true, this.positions.shield);\n    }\n\n    createCards(locationState, isPlayer, start) {\n        const cards = [];\n        for (let index = 0; index < (isPlayer ? locationState.length : this.state.handCount); index++) {\n            const cardName = isPlayer ? locationState[index] : \"tile028.jpg\";\n            const card = new Card(this.cardsContainer, this.sheet, cardName, start);\n            cards.push(card);\n        }\n        this.repositionCards(cards, start);\n        return cards;\n    }\n\n    repositionCards(array, start) {\n        for (let index = 0; index < array.length; index++) {\n            const newPosition = {\n                x: start.x + (index * 100),\n                y: start.y\n            };\n            array[index].moveTo(newPosition, true);\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}