{"ast":null,"code":"import * as PIXI from \"pixi.js\";\nexport class Card {\n  constructor(cardsContainer, sheet, name, position) {\n    this.cardsContainer = cardsContainer;\n    this.sheet = sheet;\n    this.name = name;\n    this.position = position;\n    this.place = \"tavern\";\n    this.selected = false;\n    this.sprite = new PIXI.Sprite(this.sheet.textures[name]);\n    this.sprite.eventMode = 'static';\n    this.sprite.cursor = 'pointer';\n    this.sprite.x = this.position.x;\n    this.sprite.y = this.position.y;\n    this.sprite.scale.set(0.4);\n    this.sprite.anchor.set(0.5);\n    this.cardsContainer.addChild(this.sprite);\n    this.sprite.on('pointerover', this.onPointerOver, this.sprite).on('pointerout', this.onPointerOut, this.sprite).on('pointerdown', () => {\n      this.selected = !this.selected;\n    });\n  }\n  reveal(name) {\n    if (name !== undefined) {\n      this.name = name;\n    }\n    this.sprite.texture = this.sheet.textures[this.name];\n  }\n  hide() {\n    this.sprite.texture = this.sheet.textures[\"tile028.jpg\"];\n  }\n  onPointerOver() {\n    this.tint = 0x666666;\n  }\n  onPointerOut() {\n    this.tint = 0xFFFFFF;\n  }\n  moveTo(position, reveal, destroy) {\n    if (reveal) {\n      this.reveal();\n    } else {\n      this.hide();\n    }\n    const ticker = new PIXI.Ticker();\n    ticker.add(delta => {\n      // Constants\n      const velocity = 0.15;\n\n      // Calculate direction towards position\n      let dx = position.x - this.sprite.x;\n      let dy = position.y - this.sprite.y;\n\n      // Calculate distance\n      let distance = Math.sqrt(dx * dx + dy * dy);\n\n      // Move Card towards position\n      if (distance <= 1) {\n        this.sprite.x = position.x;\n        this.sprite.y = position.y;\n        this.position = position;\n        ticker.destroy();\n        if (destroy) {\n          this.cardsContainer.destroy();\n        }\n      } else {\n        this.sprite.x += dx * velocity * delta;\n        this.sprite.y += dy * velocity * delta;\n      }\n    });\n    ticker.start();\n  }\n}","map":{"version":3,"names":["PIXI","Card","constructor","cardsContainer","sheet","name","position","place","selected","sprite","Sprite","textures","eventMode","cursor","x","y","scale","set","anchor","addChild","on","onPointerOver","onPointerOut","reveal","undefined","texture","hide","tint","moveTo","destroy","ticker","Ticker","add","delta","velocity","dx","dy","distance","Math","sqrt","start"],"sources":["/Users/rabiibouhestine/mystuff/BrowserApps/Duels/client/src/game/components/Card.js"],"sourcesContent":["import * as PIXI from \"pixi.js\";\n\nexport class Card {\n    constructor(cardsContainer, sheet, name, position) {\n        this.cardsContainer = cardsContainer;\n        this.sheet = sheet;\n        this.name = name;\n        this.position = position;\n        this.place = \"tavern\";\n        this.selected = false;\n\n        this.sprite = new PIXI.Sprite(this.sheet.textures[name]);\n        this.sprite.eventMode = 'static';\n        this.sprite.cursor = 'pointer';\n        this.sprite.x = this.position.x;\n        this.sprite.y = this.position.y;\n        this.sprite.scale.set(0.4);\n        this.sprite.anchor.set(0.5);\n        this.cardsContainer.addChild(this.sprite);\n\n        this.sprite\n            .on('pointerover', this.onPointerOver, this.sprite)\n            .on('pointerout', this.onPointerOut, this.sprite)\n            .on('pointerdown', () => {this.selected = !this.selected;});\n    }\n\n    reveal(name) {\n        if (name !== undefined) {\n            this.name = name;\n        }\n        this.sprite.texture = this.sheet.textures[this.name];\n    }\n\n    hide() {\n        this.sprite.texture = this.sheet.textures[\"tile028.jpg\"];\n    }\n\n    onPointerOver()\n    {\n        this.tint = 0x666666;\n    }\n\n    onPointerOut()\n    {\n        this.tint = 0xFFFFFF;\n    }\n\n    moveTo(position, reveal, destroy) {\n        if (reveal) {\n            this.reveal();\n        } else {\n            this.hide();\n        }\n        const ticker = new PIXI.Ticker();\n        ticker.add((delta) =>\n        {\n            // Constants\n            const velocity = 0.15;\n\n            // Calculate direction towards position\n            let dx = position.x - this.sprite.x;\n            let dy = position.y - this.sprite.y;\n\n            // Calculate distance\n            let distance = Math.sqrt(dx * dx + dy * dy);\n\n            // Move Card towards position\n            if (distance <= 1) {\n                this.sprite.x = position.x;\n                this.sprite.y = position.y;\n                this.position = position;\n                ticker.destroy();\n                if (destroy) {\n                    this.cardsContainer.destroy();\n                }\n            } else {\n                this.sprite.x += dx * velocity * delta;\n                this.sprite.y += dy * velocity * delta;\n            }\n        });\n        ticker.start()\n    }\n}\n"],"mappings":"AAAA,OAAO,KAAKA,IAAI,MAAM,SAAS;AAE/B,OAAO,MAAMC,IAAI,CAAC;EACdC,WAAWA,CAACC,cAAc,EAAEC,KAAK,EAAEC,IAAI,EAAEC,QAAQ,EAAE;IAC/C,IAAI,CAACH,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,KAAK,GAAG,QAAQ;IACrB,IAAI,CAACC,QAAQ,GAAG,KAAK;IAErB,IAAI,CAACC,MAAM,GAAG,IAAIT,IAAI,CAACU,MAAM,CAAC,IAAI,CAACN,KAAK,CAACO,QAAQ,CAACN,IAAI,CAAC,CAAC;IACxD,IAAI,CAACI,MAAM,CAACG,SAAS,GAAG,QAAQ;IAChC,IAAI,CAACH,MAAM,CAACI,MAAM,GAAG,SAAS;IAC9B,IAAI,CAACJ,MAAM,CAACK,CAAC,GAAG,IAAI,CAACR,QAAQ,CAACQ,CAAC;IAC/B,IAAI,CAACL,MAAM,CAACM,CAAC,GAAG,IAAI,CAACT,QAAQ,CAACS,CAAC;IAC/B,IAAI,CAACN,MAAM,CAACO,KAAK,CAACC,GAAG,CAAC,GAAG,CAAC;IAC1B,IAAI,CAACR,MAAM,CAACS,MAAM,CAACD,GAAG,CAAC,GAAG,CAAC;IAC3B,IAAI,CAACd,cAAc,CAACgB,QAAQ,CAAC,IAAI,CAACV,MAAM,CAAC;IAEzC,IAAI,CAACA,MAAM,CACNW,EAAE,CAAC,aAAa,EAAE,IAAI,CAACC,aAAa,EAAE,IAAI,CAACZ,MAAM,CAAC,CAClDW,EAAE,CAAC,YAAY,EAAE,IAAI,CAACE,YAAY,EAAE,IAAI,CAACb,MAAM,CAAC,CAChDW,EAAE,CAAC,aAAa,EAAE,MAAM;MAAC,IAAI,CAACZ,QAAQ,GAAG,CAAC,IAAI,CAACA,QAAQ;IAAC,CAAC,CAAC;EACnE;EAEAe,MAAMA,CAAClB,IAAI,EAAE;IACT,IAAIA,IAAI,KAAKmB,SAAS,EAAE;MACpB,IAAI,CAACnB,IAAI,GAAGA,IAAI;IACpB;IACA,IAAI,CAACI,MAAM,CAACgB,OAAO,GAAG,IAAI,CAACrB,KAAK,CAACO,QAAQ,CAAC,IAAI,CAACN,IAAI,CAAC;EACxD;EAEAqB,IAAIA,CAAA,EAAG;IACH,IAAI,CAACjB,MAAM,CAACgB,OAAO,GAAG,IAAI,CAACrB,KAAK,CAACO,QAAQ,CAAC,aAAa,CAAC;EAC5D;EAEAU,aAAaA,CAAA,EACb;IACI,IAAI,CAACM,IAAI,GAAG,QAAQ;EACxB;EAEAL,YAAYA,CAAA,EACZ;IACI,IAAI,CAACK,IAAI,GAAG,QAAQ;EACxB;EAEAC,MAAMA,CAACtB,QAAQ,EAAEiB,MAAM,EAAEM,OAAO,EAAE;IAC9B,IAAIN,MAAM,EAAE;MACR,IAAI,CAACA,MAAM,CAAC,CAAC;IACjB,CAAC,MAAM;MACH,IAAI,CAACG,IAAI,CAAC,CAAC;IACf;IACA,MAAMI,MAAM,GAAG,IAAI9B,IAAI,CAAC+B,MAAM,CAAC,CAAC;IAChCD,MAAM,CAACE,GAAG,CAAEC,KAAK,IACjB;MACI;MACA,MAAMC,QAAQ,GAAG,IAAI;;MAErB;MACA,IAAIC,EAAE,GAAG7B,QAAQ,CAACQ,CAAC,GAAG,IAAI,CAACL,MAAM,CAACK,CAAC;MACnC,IAAIsB,EAAE,GAAG9B,QAAQ,CAACS,CAAC,GAAG,IAAI,CAACN,MAAM,CAACM,CAAC;;MAEnC;MACA,IAAIsB,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAACJ,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAC;;MAE3C;MACA,IAAIC,QAAQ,IAAI,CAAC,EAAE;QACf,IAAI,CAAC5B,MAAM,CAACK,CAAC,GAAGR,QAAQ,CAACQ,CAAC;QAC1B,IAAI,CAACL,MAAM,CAACM,CAAC,GAAGT,QAAQ,CAACS,CAAC;QAC1B,IAAI,CAACT,QAAQ,GAAGA,QAAQ;QACxBwB,MAAM,CAACD,OAAO,CAAC,CAAC;QAChB,IAAIA,OAAO,EAAE;UACT,IAAI,CAAC1B,cAAc,CAAC0B,OAAO,CAAC,CAAC;QACjC;MACJ,CAAC,MAAM;QACH,IAAI,CAACpB,MAAM,CAACK,CAAC,IAAIqB,EAAE,GAAGD,QAAQ,GAAGD,KAAK;QACtC,IAAI,CAACxB,MAAM,CAACM,CAAC,IAAIqB,EAAE,GAAGF,QAAQ,GAAGD,KAAK;MAC1C;IACJ,CAAC,CAAC;IACFH,MAAM,CAACU,KAAK,CAAC,CAAC;EAClB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}