{"ast":null,"code":"import '../settings.mjs';\nimport { settings } from '@pixi/settings';\nfunction getResolutionOfUrl(url, defaultValue = 1) {\n  const resolution = settings.RETINA_PREFIX?.exec(url);\n  if (resolution) {\n    return parseFloat(resolution[1]);\n  }\n  return defaultValue;\n}\nexport { getResolutionOfUrl };","map":{"version":3,"names":["getResolutionOfUrl","url","defaultValue","resolution","settings","RETINA_PREFIX","exec","parseFloat"],"sources":["/Users/rabiibouhestine/mystuff/BrowserApps/Duels/client/node_modules/@pixi/utils/src/network/getResolutionOfUrl.ts"],"sourcesContent":["import { settings } from '../settings';\n\n/**\n * get the resolution / device pixel ratio of an asset by looking for the prefix\n * used by spritesheets and image urls\n * @memberof PIXI.utils\n * @function getResolutionOfUrl\n * @param {string} url - the image path\n * @param {number} [defaultValue=1] - the defaultValue if no filename prefix is set.\n * @returns {number} resolution / device pixel ratio of an asset\n */\nexport function getResolutionOfUrl(url: string, defaultValue = 1): number\n{\n    const resolution = settings.RETINA_PREFIX?.exec(url);\n\n    if (resolution)\n    {\n        return parseFloat(resolution[1]);\n    }\n\n    return defaultValue;\n}\n"],"mappings":";;AAWmC,SAAAA,mBAAAC,GAAA,EAAaC,YAAA,GAAe,CAC/D;EACI,MAAMC,UAAa,GAAAC,QAAA,CAASC,aAAe,EAAAC,IAAA,CAAKL,GAAG;EAEnD,IAAIE,UACJ;IACW,OAAAI,UAAA,CAAWJ,UAAA,CAAW,CAAE;EAAA;EAG5B,OAAAD,YAAA;AACX"},"metadata":{},"sourceType":"module","externalDependencies":[]}